#!/bin/sh

# Clone of the dumpling Docker shell script but allows for specifying
# what image to run against

# Run a shell in the dumpling Docker container as the host user
# with some features accessible from within the container:
#
#   * home directories
#   * users and groups
#   * ssh private key identities (e.g., for git)

set -eu

if [ $# -lt 2 ]; then
  echo "Usage: $0 [image-name] [container-name]"
  exit
fi

# Start the SSH authentication agent if it is not already running.
# This is useful for holding and forwarding SSH keys.
if [ -z "${SSH_AUTH_SOCK-}" ]; then
  eval "$(ssh-agent)" > /dev/null
fi

# Use the username of the user calling this script, via sudo or not,
# when naming and running the Docker container.
user="${SUDO_USER-$USER}"
image=$1
name=$2

if [ -n "$(docker ps -q -f "name=${name}")" ]; then
    docker exec "$name" "lab-asst" -l
    exec docker attach "$name"
else
    exec docker run -it --rm --name "$name"\
      --network host --cap-add SYS_ADMIN --cap-add DAC_READ_SEARCH \
      -v /home:/home \
      -v /etc/group:/etc/group.host:ro \
      -v /etc/passwd:/etc/passwd.host:ro \
      -v /srv/cifs:/srv/cifs:ro \
      -v "${SSH_AUTH_SOCK}":/tmp/ssh \
      -e "OLDPWD=$(pwd)" \
      -e SSH_AUTH_SOCK=/tmp/ssh \
      -e "USER=${user}" \
      -e PORT1 -e PORT2 -e PORT3 -e PORT4 -e BOLTPORT -e NEOPORT \
      "$image" "$@"
fi
